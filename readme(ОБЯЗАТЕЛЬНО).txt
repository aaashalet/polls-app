Polls App
Что это?
Это мой проект — простой веб-сайт на Flask, где можно создавать опросы, голосовать и смотреть результаты. Тут есть регистрация, вход, можно загружать аватарки, создавать опросы с картинками и вариантами ответов.

Что умеет?
Зарегистрироваться, войти в аккаунт и выйти.

Изменять пароль и загружать аватарку.

Создавать опросы, редактировать и удалять их (только если ты создатель или админ).

Голосовать за один вариант в опросе.

Смотреть результаты в виде красивых графиков.

Админка для управления пользователями и опросами с поиском.

Можно посмотреть прогноз погоды (через OpenWeatherMap).

Поиск по опросам.

Какие были проблемы?
Сначала были сложности с загрузкой файлов и добавлением вариантов в опросы.

Были ошибки с базой данных, особенно когда пытался работать вне контекста Flask.

Нужно было сделать так, чтобы только создатель опроса мог его менять или удалять — пришлось добавлять проверки.

Проект изначально делал на русском, но из-за проблем с кодировкой и отображением решил сделать всё на английском, чтобы было проще и стабильнее.

Для кого этот проект?
Для меня, чтобы научиться делать настоящие веб-приложения на Python и Flask.

Для моего преподавателя, чтобы показать, что я умею делать.

Для всех, кто хочет понять, как устроен базовый функционал с авторизацией, формами и API.

Почему всё на английском?
Потому что когда я писал на русском, постоянно вылезали ошибки с кодировками, и сайт не работал как надо. Поэтому сделал на английском — так надёжнее и проще поддерживать.

Как запустить?
Склонируй репозиторий.

Установи зависимости через pip install -r requirements.txt.

В файле app.py вставь свой ключ OpenWeatherMap.

Запусти команду python app.py.

Открой в браузере http://localhost:5000.

Админка
В этом проекте есть специальный раздел для администраторов — это админка. В админке можно:

Просматривать список всех пользователей и опросов.

Искать пользователей и опросы по имени или вопросу.

Редактировать данные пользователей, например менять их роли (админ или обычный пользователь).

Удалять пользователей (но нельзя удалить самого себя, чтобы случайно не заблокировать доступ).

Удалять любые опросы.

Админка защищена — попасть туда могут только пользователи с правами администратора. Это важно для безопасности, чтобы обычные пользователи не могли управлять всем сайтом.

Как включить и пользоваться админкой
Создай пользователя с правами администратора

По умолчанию у всех новых пользователей роль is_admin стоит False. Чтобы сделать пользователя админом, нужно вручную в базе данных изменить поле is_admin на True.

Например, если используешь SQLite, можно открыть базу через DB Browser и поменять значение. Либо написать небольшой скрипт:

python
from app import db, User
user = User.query.filter_by(username='твой_логин').first()
user.is_admin = True
db.session.commit()
Это даст этому пользователю доступ к админке.

Вход в админку

После того как пользователь с ролью админа залогинился, в браузере можно открыть адрес:

http://localhost:5000/admin
или на хосте:
Что доступно в админке

Просмотр списка пользователей и опросов.

Поиск по пользователям и опросам.

Редактирование пользователей (например, назначение или снятие прав администратора).

Удаление пользователей и опросов (но админ не может удалить себя).

Безопасность

Админка защищена: если кто-то без прав администратора попробует зайти в /admin — получит ошибку 403 (доступ запрещён).

Проект не чист, иногда забывал постить обновленный, может быть я забыл удалить функции которые не работают, но они никак не мешаются, мне сайт очень нравится, думаю вы оцените его тоже
в /upload очень странные картинки, на них лучше не обращаться внимание)